FROM node:24-alpine

WORKDIR /usr/src/app

# Instalamos dependencias necesarias para Alpine
RUN apk add --no-cache \
    curl \
    ca-certificates \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ttf-freefont \
    && rm -rf /var/cache/apk/*

# Configurar variables de entorno para puppeteer
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser \
    NODE_ENV=production

# Crear usuario no-root para seguridad
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copiamos los archivos de dependencias
COPY package*.json ./

# Instalamos dependencias con configuraciones de seguridad
RUN npm install -g npm@latest && \
    npm ci --only=production --no-audit && \
    npm cache clean --force

# Copiamos el resto de archivos del proyecto
COPY . .

# Crear directorios necesarios para uploads
RUN mkdir -p src/public/uploads/profile_photos && \
    chmod -R 755 src/public/uploads && \
    chown -R nodejs:nodejs src/public/uploads

# Creamos los directorios necesarios si no existen para evitar errores
RUN mkdir -p Frontend/dist FrontendPublic && \
    chown -R nodejs:nodejs /usr/src/app

# Exponemos el puerto que utiliza la aplicación
EXPOSE 4000

USER nodejs

# Comando para iniciar la aplicación en modo producción
CMD ["npm", "start"]